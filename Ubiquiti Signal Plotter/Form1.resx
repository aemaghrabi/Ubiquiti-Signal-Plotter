<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="backgroundWorker1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>